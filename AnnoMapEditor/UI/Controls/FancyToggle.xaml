<UserControl x:Class="AnnoMapEditor.UI.Controls.FancyToggle"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AnnoMapEditor.UI.Controls"
             xmlns:converters="clr-namespace:AnnoMapEditor.UI.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="30" d:DesignWidth="120">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles.xaml" />
                <ResourceDictionary>
                    <!-- use Hide to make ensure parent of on/off text doesn't change size -->
                    <converters:BoolToVisibility x:Key="VisibleOnTrue" OnTrue="Visible" OnFalse="Hidden" />
                    <converters:BoolToVisibility x:Key="VisibleOnFalse" OnTrue="Hidden" OnFalse="Visible" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <TextBlock 
            Style="{StaticResource DefaultLabelStyle}"
            Padding="0"
            VerticalAlignment="Center"
            Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FancyToggle}}, Path=Label, UpdateSourceTrigger=PropertyChanged}"/>
        <CheckBox
            Name="Box"
            Grid.Column="1"
            Margin="8,0,0,0"
            HorizontalAlignment="Right"
            FlowDirection="RightToLeft"
            IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FancyToggle}}, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            <CheckBox.Content>
                <Grid>
                    <TextBlock 
                        Name="OnTextBlock"
                        HorizontalAlignment="Left"
                        Style="{StaticResource DefaultLabelStyle}"
                        Padding="0"
                        Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FancyToggle}}, Path=OnText, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FancyToggle}}, Path=IsChecked, Converter={StaticResource VisibleOnTrue}, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock 
                        Name="OffTextBlock"
                        HorizontalAlignment="Left"
                        Style="{StaticResource DefaultLabelStyle}"
                        Padding="0"
                        Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FancyToggle}}, Path=OffText, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FancyToggle}}, Path=IsChecked, Converter={StaticResource VisibleOnFalse}, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </CheckBox.Content>
        </CheckBox>
    </Grid>
</UserControl>
